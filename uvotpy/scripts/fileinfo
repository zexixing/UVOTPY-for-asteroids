#!/usr/bin/env python

'''
    given a grism file and extension, find matching 
    lenticular images taken just before or after the grism 
    
    fileinfo file  [chatter=0] [twait=40.] 
    
    where file is e.g., '/home/someone/sw0023456789ugu_dt.img[23]'
    
    the pyfits package needs to be installed in Python
      http://www.stsci.edu/resources/software_hardware/pyfits
    th numpy package is present in most Python installations 
    
'''
version=1.0
import sys

# in case this is called from the OS
if __name__ == '__main__':
   #  test if arguments were supplied, if not print message and return 
   ext = None
   chatter = 0
   twait = 40.0
   if len(sys.argv) > 0:
      file = sys.argv[1]
      if len(sys.argv) > 1:
        for i in range(2,len(sys.argv) ):
          if sys.argv[i].rsplit('=')[0] == 'chatter':
	     chatter = sys.argv[i].rsplit('=')[1]
	  elif sys.argv[i].rsplit('=')[0] == 'twait':  
	     twait = sys.argv[i].rsplit('=')[1]
	  elif sys.argv[i].rsplit('=')[0] == 'ext':  
	     ext = sys.argv[i].rsplit('=')[1]
	  else:
	     print '''
  INPUT ERROR 	   
    use: fileinfo file  [chatter=0] [twait=40.] [ext=23]
    where file is e.g., '/home/someone/sw0023456789ugu_dt.img[23]'
    extension is required, but can be given as an option [ext=23]
    
         '''
   #
   x = file.rsplit('/',1)
   if len(x) == 1: 
      path = './'
      filestub = x[0].rsplit('u')[0] 
      if ext == None:
         ext = x[0].rsplit('[')[1].rsplit(']')[0]
   elif len(x) == 2:
      path = x[0]
      filestub = x[1].rsplit('u')[0] 
      if ext == None:
         ext = x[1].rsplit('[')[1].rsplit(']')[0]
   specfile, lfilt1, lfilt1_ext, lfilt2, lfilt2_ext, attfile= \
      fileinfo(filestub,ext,directory=path,chatter=chatter,twait=twait)
   if lfilt1 == None: lfilt1 = -1
   if lfilt2 == None: lfilt2 = -1
   if lfilt1_ext == None: lfilt1_ext = -1
   if lfilt2_ext == None: lfilt2_ext = -1
   if attfile == None: attfile = '-1'   
   print specfile
   print lfilt1
   print lfilt1_ext
   print lfilt2
   print lfilt2_ext
   print attfile      	   
else: print "fileinfo needs to be called as a script"   



def fileinfo(filestub,ext,lfilt1=None, directory='./',chatter=0,twait=40.0):
   '''find spectrum and matching attitude and lenticular images 
      uncompress gzipped files found
      twait is maximum time allowed between begin and end exposures 
      grism-lenticular filter.
      
   '''
   import os
   import pyfits
   from numpy import array
   
   ext_names =array(['uw2','um2','uw1','uuu','ubb','uvv','uwh'])
   lfiltnames=array(['uvw2','uvm2','uvw1','u','b','v','wh'])
   
   if (not directory.endswith('/')) : 
      directory += '/' 
   auxildir = directory+'../../auxil/'
   attfile = None
      
   # test if u or v grism file and set variable 
   specfile = ' *filename not yet initialised (directory wrong?)* '
   if os.access(directory+filestub+'ugu_dt.img',os.F_OK):
        specfile =  directory+filestub+'ugu_dt.img'
	if chatter > 0: print 'reading ',specfile
   elif os.access(directory+filestub+'ugu_dt.img.gz',os.F_OK):
        specfile =  directory+filestub+'ugu_dt.img'
	os.system( 'gunzip '+specfile+'.gz' )
	if chatter > 0: print 'reading ',specfile
   elif os.access(directory+filestub+'ugv_dt.img',os.F_OK):     
        specfile =  directory+filestub+'ugv_dt.img'
	if chatter > 0: print 'reading ',specfile
   elif os.access(directory+filestub+'ugv_dt.img.gz',os.F_OK):     
        specfile =  directory+filestub+'ugv_dt.img'
	os.system( 'gunzip '+specfile+'.gz' )
	if chatter > 0: print 'reading ',specfile
   else:
        print "cannot find %s: DET file not found - pls check directory/file provided  is correct" % specfile
	return	
   #    attitude file:
   if os.access(directory+filestub+'pat.fits',os.F_OK):
        attfile =  directory+filestub+'pat.fits'
	if chatter > 0: print 'found att file ',attfile
   elif os.access(directory+filestub+'pat.fits.gz',os.F_OK):
        attfile =  directory+filestub+'pat.fits'
	os.system( 'gunzip '+attfile+'.gz' )
	if chatter > 0: print 'found att file ',attfile
   elif os.access(directory+filestub+'uat.fits',os.F_OK):     
        attfile =  directory+filestub+'uat.fits'
	if chatter > 0: print 'found att file ',attfile
   elif os.access(directory+filestub+'uat.fits.gz',os.F_OK):     
        attfile =  directory+filestub+'uat.fits'
	os.system( 'gunzip '+attfile+'.gz' )
	if chatter > 0: print 'found att file ',attfile
   elif os.access(directory+filestub+'sat.fits',os.F_OK):     
        attfile =  directory+filestub+'sat.fits'
	if chatter > 0: print 'found att file ',attfile
   elif os.access(directory+filestub+'sat.fits.gz',os.F_OK):     
        attfile =  directory+filestub+'sat.fits'
	os.system( 'gunzip '+attfile+'.gz' )
	if chatter > 0: print 'found att file ',attfile
   elif os.access(auxildir+filestub+'pat.fits',os.F_OK):
        attfile =  auxildir+filestub+'pat.fits'
	if chatter > 0: print 'found att file ',attfile
   elif os.access(auxildir+filestub+'pat.fits.gz',os.F_OK):
        attfile =  auxildir+filestub+'pat.fits'
	os.system( 'gunzip '+attfile+'.gz' )
	if chatter > 0: print 'found att file ',attfile
   elif os.access(auxildir+filestub+'uat.fits',os.F_OK):     
        attfile =  auxildir+filestub+'uat.fits'
	if chatter > 0: print 'found att file ',attfile
   elif os.access(auxildir+filestub+'uat.fits.gz',os.F_OK):     
        attfile =  auxildir+filestub+'uat.fits'
	os.system( 'gunzip '+attfile+'.gz' )
	if chatter > 0: print 'found att file ',attfile
   elif os.access(auxildir+filestub+'sat.fits',os.F_OK):     
        attfile =  auxildir+filestub+'sat.fits'
	if chatter > 0: print 'found att file ',attfile
   elif os.access(auxildir+filestub+'sat.fits.gz',os.F_OK):     
        attfile =  auxildir+filestub+'sat.fits'
	os.system( 'gunzip '+attfile+'.gz' )
	if chatter > 0: print 'found att file ',attfile
   #    filter file(s)
   lfilt1,lfilt2 = None,None 
   lfilt1_ext = None; lfilt2_ext=None
   hdr = pyfits.getheader(specfile,int(ext))
   tstart = hdr['TSTART']
   tstop  = hdr['TSTOP'] 
   if chatter > 0: 
      print 'grism times : %s - %s '%(tstart,tstop)
   lfile=None
   #  
   for k in range(len(ext_names)):
      ftyp = ext_names[k]
      lfiltyp = lfiltnames[k]
      if chatter > 0: print "testting for "+directory+filestub+ftyp+'_sk.img'
      if os.access(directory+filestub+ftyp+'_sk.img',os.F_OK):
        lfile =  directory+filestub+ftyp+'_sk.img'
	if chatter > 0: 
	   print 'found lenticular sky file ',lfile 
      elif os.access(directory+filestub+ftyp+'_sk.img.gz',os.F_OK):
        lfile =  directory+filestub+ftyp+'_sk.img' 
	os.system( 'gunzip '+lfile+'.gz' )
	if chatter > 0: print 'found lenticular sky file ',lfile
      if lfile != None:	
         # check if it has an extension before or after specfile[ext] 
         xxx = pyfits.open(lfile)
         for i in range(1,len(xxx)):
            t1 = xxx[i].header['TSTART']
	    t2 = xxx[i].header['TSTOP']
	    if abs(t2-tstart) < twait:
	       lfilt1 = lfiltyp
	       lfilt1_ext = i
	       if chatter > 0: print "lenticular file observation preceeding grism observation"
	    if abs(t1-tstop) < twait:
	       lfilt2 = lfiltyp
	       lfilt2_ext = i   
	       if chatter > 0: print "lenticular file observation after grism observation"
	 lfile = None 
	      
   # wrapup in case there is only one, but in lfilt2.
   if ((lfilt1 == None) & (lfilt2 != None)): 
      if chatter > 1: print "putting only filter info in filter 1"
      lfilt1 = lfilt2
      lfilt2 = None
      lfilt1_ext = lfilt2_ext
      lfilt2_ext = None
   #   
   return specfile, lfilt1, lfilt1_ext, lfilt2, lfilt2_ext, attfile	
